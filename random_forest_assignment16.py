# -*- coding: utf-8 -*-
"""Random_Forest_Assignment16.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18BhBbShM-vkhnfvJ6ir-7qM9xP3K49go
"""

#Social_Network_Ads.csv

"""**Importing the libraries**"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split

"""**Importing the dataset**"""

data=pd.read_csv('Social_Network_Ads.csv')
data=data.drop('User ID',axis=1)
le=LabelEncoder()
data['Gender']=le.fit_transform(data['Gender'])
x=data[['Gender','Age','EstimatedSalary']]
y=data[['Purchased']]

"""**Splitting the dataset into the Training set and Test set**"""

X_Train,X_Test,y_Train,y_Test=train_test_split(x,y,test_size=0.25,random_state=1)

"""**Feature Scaling**"""

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_Train=sc.fit_transform(X_Train)
X_Test=sc.transform(X_Test)

"""**Fitting Random Forest to the Training set**"""

from sklearn.ensemble import RandomForestClassifier
model=RandomForestClassifier()
model.fit(X_Train,y_Train,sample_weight=2)

"""**Predicting the Test set results**"""

y_predict=model.predict(X_Test)

"""**Making the Confusion Matrix**"""

from sklearn.metrics import confusion_matrix,accuracy_score,f1_score,plot_roc_curve
print(confusion_matrix(y_Test,y_predict))
print(accuracy_score(y_Test,y_predict))
print(f1_score(y_Test,y_predict))

"""**Visualising the Training set results**"""

plot_roc_curve(model,X_Train,y_Train)

"""**Visualising the Test set results**"""

plot_roc_curve(model,X_Test,y_Test)







